{"version":3,"sources":["firebase/index.js","firebase/refs.js","modules/utils/stringUtils.js","modules/timetable/component/timetable.js","modules/auth/form/authForm.js","modules/timetable/form/signUpForm.js","modules/timetable/component/successPage.js","modules/timetable/component/signUp.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","dateRef","firestore","collection","concat","Date","toISOString","slice","capitalizeString","str","charAt","toUpperCase","toLowerCase","FACILITIES","TimeSlotWrapper","_ref","time","facilityType","_useState","useState","_useState2","Object","slicedToArray","isBooked","setIsBooked","prevFacilityType","value","ref","useRef","useEffect","current","usePrevious","where","get","then","snapShot","forEach","react_default","a","createElement","SlotWrapper","TimeWrapper","formatTime","BookedWrapper","SignUpLink","to","pathname","state","facility","FacilityContainer","_ref2","name","isActive","onClick","className","styled","div","_templateObject","_templateObject2","Header","_templateObject3","FacilityWrapper","_templateObject4","Link","_templateObject5","_templateObject6","TimeTableWrapper","_templateObject7","TimeSlotContainer","_templateObject8","TimeTable","_useState3","_useState4","setFacilityType","times","startingTime","operationLength","i","push","generateTimes","map","timetable_FacilityContainer","timetable_TimeSlotWrapper","AuthForm","type","ButtonWrapper","signUpForm_templateObject","FormWrapper","signUpForm_templateObject2","FieldGroup","signUpForm_templateObject3","SignUpForm","props","handleSubmit","_props$location$state","location","formik_esm","initialValues","unit","strata","onSubmit","component","SuccessPage","withRouter","match","params","isSubmitted","setSubmitted","successPage","signUpForm","assign","booking","add","parseInt","catch","e","console","error","AppHeader","App_Header","AppWrapper","App_templateObject","App_templateObject2","App","BrowserRouter","App_AppHeader","Route","exact","path","SignUp","Boolean","window","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c45268a9.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport 'firebase/firestore';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyBfIY1hTfIgCTBa1fqU7m674tFmw5-epIo\",\r\n    authDomain: \"canoeclub-1a082.firebaseapp.com\",\r\n    databaseURL: \"https://canoeclub-1a082.firebaseio.com\",\r\n    projectId: \"canoeclub-1a082\",\r\n    storageBucket: \"canoeclub-1a082.appspot.com\",\r\n    messagingSenderId: \"372254742941\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase","import firebase from './index'\r\n\r\nconst db = firebase.firestore()\r\n\r\nexport const dateRef = db.collection(`${new Date().toISOString().slice(0, 10)}`)","export const capitalizeString = (str) => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase()","import React, { useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from \"react-router-dom\";\r\nimport { dateRef } from '../../../firebase/refs'\r\nimport { capitalizeString } from '../../utils/stringUtils'\r\n\r\nconst OPERATION_HOURS_LENGTH = 12\r\n\r\nconst STARTING_TIME = 9\r\n\r\nconst GYM = 'gym'\r\n\r\nconst TENNIS = 'tennis'\r\n\r\nconst FACILITIES = [\r\n  GYM,\r\n  TENNIS\r\n]\r\n\r\nconst generateTimes = (startingTime, operationLength) => {\r\n  let times = []\r\n  for (let i = startingTime; i <= startingTime + operationLength; i++) {\r\n    times.push(i)\r\n  }\r\n  return times\r\n}\r\n\r\nconst formatTime = (time) => time + \":00\"\r\n\r\nconst usePrevious = (value) => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nconst TimeSlotWrapper = ({ time, facilityType }) => {\r\n\r\n  const [isBooked, setIsBooked] = useState(false)\r\n  const prevFacilityType = usePrevious(facilityType)\r\n\r\n  useEffect(() => {\r\n    if (prevFacilityType !== facilityType) setIsBooked(false)\r\n    dateRef\r\n      .where(\"time\", \"==\", time)\r\n      .where(\"facility\", \"==\", facilityType)\r\n      .get()\r\n      .then((snapShot) => snapShot.forEach(() => {\r\n        setIsBooked(true)\r\n      }))\r\n  }, [facilityType])\r\n\r\n  return (\r\n    <SlotWrapper>\r\n      <TimeWrapper>\r\n        {formatTime(time)}\r\n      </TimeWrapper>\r\n      {isBooked ?\r\n        <BookedWrapper>\r\n          Booked\r\n        </BookedWrapper> :\r\n        <SignUpLink to={{\r\n          pathname: `/signup/${facilityType}`,\r\n          state: { time: time, facility: facilityType }\r\n        }}>\r\n          Signup\r\n        </SignUpLink>\r\n      }\r\n    </SlotWrapper>\r\n  )\r\n}\r\n\r\nconst FacilityContainer = ({ name, isActive, onClick }) => (\r\n  <div onClick={() => onClick(name)} className={isActive ? 'active' : null}>\r\n    <h3>\r\n      {capitalizeString(name)}\r\n    </h3>\r\n  </div>\r\n)\r\n\r\nconst TimeTable = () => {\r\n\r\n  const [facilityType, setFacilityType] = useState(GYM)\r\n\r\n  const times = generateTimes(STARTING_TIME, OPERATION_HOURS_LENGTH)\r\n\r\n  return (\r\n    <TimeTableWrapper>\r\n      <Header>\r\n        {FACILITIES.map((facility) => (\r\n          <FacilityWrapper>\r\n            <FacilityContainer name={facility} onClick={setFacilityType} isActive={facilityType === facility} />\r\n          </FacilityWrapper>\r\n        ))}\r\n      </Header>\r\n      <TimeSlotContainer>\r\n        {times.map((time) => <TimeSlotWrapper time={time} facilityType={facilityType} />)}\r\n      </TimeSlotContainer>\r\n    </TimeTableWrapper>\r\n  )\r\n}\r\n\r\nconst TimeWrapper = styled.div`\r\n  \r\n`\r\n\r\nconst BookedWrapper = styled.div`\r\n  color: red;\r\n  font-weight: bold;\r\n  width: 64px;\r\n  text-align: center;\r\n`\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  background: #FCFCFC;\r\n  margin: 8px;\r\n`\r\n\r\nconst FacilityWrapper = styled.div`\r\n  display: flex;\r\n  background-color: #FCFCFC;\r\n  color: lightgrey;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  h3:hover {\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .active {\r\n    background-color: #46237A;\r\n    color: #FCFCFC;\r\n    flex-grow: 1;\r\n    text-align: center;\r\n  }\r\n\r\n  .active > h3:hover {\r\n    color: #FCFCFC\r\n  }\r\n`\r\n\r\nconst SignUpLink = styled(Link)`\r\n  background-color: #3DDC97;\r\n  border: 1px solid #3DDC97;\r\n  padding: 4px;\r\n  width: 64px;\r\n  color: white;\r\n  text-decoration: none;\r\n  text-align: center;\r\n\r\n  :hover, :active, :visited {\r\n    text-decoration: none;\r\n  }\r\n\r\n  :hover {\r\n    background-color: white;\r\n    border: 1px solid #3DDC97;\r\n    color: #3DDC97;\r\n  }\r\n`\r\n\r\nconst SlotWrapper = styled.div`\r\n  display: flex;\r\n  width: 300px;\r\n  color: black;\r\n  background-color: #FCFCFC;\r\n  justify-content: space-evenly;\r\n  align-self: center;\r\n  align-items: center;\r\n  height: 48px;\r\n  width: 100%;\r\n  margin: 4px;\r\n  border-color: 1px solid lightgrey;\r\n`\r\n\r\nconst TimeTableWrapper = styled.div`\r\n  display: flex;\r\n  width: 500px;\r\n  flex-direction: column;\r\n  align-content: center;\r\n`\r\n\r\nconst TimeSlotContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content; space-evenly;\r\n  align-content: center;\r\n  margin: 8px;\r\n`\r\n\r\nexport default TimeTable","import React from 'react'\r\n\r\nconst AuthForm = () => (\r\n  <form>\r\n    <label>\r\n    Email:\r\n      <input type=\"email\" name=\"email\" />\r\n  </label>\r\n  <label>\r\n    Password\r\n      <input type=\"password\" name=\"password\" />\r\n  </label>\r\n    <input type=\"submit\" value=\"Register\" />\r\n  </form>\r\n)\r\n\r\nexport default AuthForm","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport { capitalizeString } from '../../utils/stringUtils'\r\n\r\nconst SignUpForm = (props) => {\r\n  const { handleSubmit, location: { state: { time, facility } } } = props\r\n  return (\r\n    <FormWrapper>\r\n      <h3>\r\n        {capitalizeString(facility)} booking for {time}:00\r\n    </h3>\r\n      <Formik\r\n        initialValues={{ name: '', unit: '', strata: '' }}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Form>\r\n          <FieldGroup>\r\n            <label>\r\n              Name:\r\n          </label>\r\n            <Field type=\"text\" name=\"name\" />\r\n            <ErrorMessage name=\"name\" component=\"div\" />\r\n          </FieldGroup>\r\n          <FieldGroup>\r\n            <label>\r\n              Unit:\r\n          </label>\r\n            <Field type=\"number\" name=\"unit\" />\r\n            <ErrorMessage name=\"number\" component=\"div\" />\r\n          </FieldGroup>\r\n          <FieldGroup>\r\n            <label>\r\n              Strata:\r\n          </label>\r\n            <Field type=\"text\" name=\"strata\" />\r\n            <ErrorMessage name=\"strata\" component=\"div\" />\r\n          </ FieldGroup>\r\n          <ButtonWrapper>\r\n            <button type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </ButtonWrapper>\r\n        </Form>\r\n      </Formik>\r\n    </FormWrapper>\r\n  )\r\n}\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst FormWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #FCFCFC;\r\n  color: black;\r\n\r\n  h3 {\r\n    text-align: center;\r\n  }\r\n    \r\n  * {\r\n      margin: 12px;\r\n  }\r\n\r\n  button {\r\n    background-color: #3DDC97;\r\n    color: white;\r\n    border: none;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    padding: 8px;\r\n    font-size: 1em;\r\n  }\r\n`\r\n\r\nconst FieldGroup = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n\r\n  label {\r\n      flex-grow: 2;\r\n  }\r\n`\r\n\r\nexport default SignUpForm","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst SuccessPage = () => (\r\n  <div>\r\n    <h2>\r\n      Success!\r\n    </h2>\r\n    <Link to=\"/\">\r\n      Return to Home\r\n    </Link>\r\n  </div>\r\n)\r\n\r\nexport default SuccessPage","import React, { useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { dateRef } from '../../../firebase/refs'\r\nimport SignUpForm from '../form/signUpForm'\r\nimport SuccessPage from './successPage'\r\n\r\nconst SignUp = (props) => {\r\n  const { params: { facilityType } } = props.match\r\n  const { time } = props.location.state\r\n  const [isSubmitted, setSubmitted] = useState(false)\r\n\r\n  const handleSubmit = (booking) => {\r\n    dateRef.add({\r\n      name: booking.name,\r\n      unit: booking.unit,\r\n      strata: booking.strata,\r\n      time: parseInt(time),\r\n      facility: facilityType\r\n    }).then(setSubmitted(true)).catch((e) => console.error(e))\r\n  }\r\n\r\n  return (\r\n  <div>\r\n    {isSubmitted ? <SuccessPage /> : <SignUpForm handleSubmit={handleSubmit} { ...props } />}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(SignUp)\r\n\r\n","import React from 'react';\nimport styled from 'styled-components'\nimport TimeTable from './modules/timetable/component/timetable'\nimport AuthForm from './modules/auth/form/authForm'\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport SignUp from './modules/timetable/component/signUp';\n\nconst AppHeader = () => (\n  <Header>\n    <Link to=\"/\">\n      <h1>\n        Canoe Club Signup\n        </h1>\n    </Link>\n    {/* <Link to=\"/register\">\n      Register\n    </Link> */}\n  </Header>\n)\n\nconst App = () => (\n  <AppWrapper>\n    <Router>\n      <div>\n        <AppHeader />\n        <Route exact path=\"/\" component={TimeTable} />\n        <Route path=\"/register\" component={AuthForm} />\n        <Route path=\"/signup/:facilityType\" component={SignUp} />\n      </div>\n    </Router>\n  </AppWrapper>\n)\n\nconst AppWrapper = styled.div`\n`\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: center;\n\n  a {\n    text-decoration: none;\n    color: #FCFCFC;\n  }\n`\n\nexport default App;\n\n/**\n * Colour scheme\n * Blue: 256EFF\n * Spanish violet: 46237A\n * Eucalyptus: 3DDC97\n * Baby powder: FCFCFC\n * Magic potion: FF495C\n */\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}